name: Subply Pipeline #nama actionsnya
run-name: ${{ github.actor }} triggered pipeline
on:
  push:
    branches:
      - master #yang master-master aj
jobs:
  subply-deploy:
    runs-on: ubuntu-latest #os yang dipakai gh actions

    permissions:
      contents: read
      id-token: write
      packages: write   #izin yang dibutuhkan

    steps:
      - uses: actions/checkout@v4 #tool untuk clone current repo
        with:
          fetch-depth: 2 #ambil 2 commit terakhir aja untuk pembandingan

      - name: Show info
        run: | #basically ambil data ni vm
          echo "OS: ${{ runner.os }}" 
          echo "Branch: ${{ github.ref }}"
          echo "Repo: ${{ github.repository }}"

      - name: LIst workspace files
        run: ls -la ${{github.workspace}}

      - name: build docker image # build image
        run: docker build -t subply-api:latest .

      - name: adding tags to image #nambah tag ke image
        run: | # tag untuk ghcr dan gcr
          docker tag subply-api:latest ghcr.io/${{github.actor}}/subply-api:latest

      - name: login ghcr # loginkan ghcr le
        run: echo ${{secrets.GITHUB_TOKEN}} | docker login ghcr.io -u ${{github.actor}} --password-stdin

      - name: push to ghcr # push image ke github container registry
        run: |
          docker push ghcr.io/${{github.actor}}/subply-api:latest

      - uses: 'google-github-actions/auth@v2' # tool untuk autentikasi ke gcp
        with: # gunakan workload identity ama service account
          workload_identity_provider: 'projects/591941627936/locations/global/workloadIdentityPools/github-actions-subply/providers/github-actions' 
          service_account: 'github-actions-subply@modified-fabric-379312.iam.gserviceaccount.com'

      - name: "check if deployment needed" # cek apakah ada perubahan di src
        id: check # set id ini penting
        run: | # cek apakah ada perubahan di src dengan git diff yang untuk HEAD~1 (commit sebelumnya), quiet untuk tidak menampilkan output
          if git diff --quiet HEAD~1 -- src/; then 
            echo "deploy=false" >> $GITHUB_OUTPUT
          else
            echo "deploy=true" >> $GITHUB_OUTPUT
          fi

      - name: 'Set up Cloud SDK'
        if: steps.check.outputs.deploy == 'true'
        uses: 'google-github-actions/setup-gcloud@v2' # tool untuk setup gcloud cli

      - name: "Use gcloud CLI"
        if: steps.check.outputs.deploy == 'true'
        run: "gcloud info"

      - name: "Docker auth"
        if: steps.check.outputs.deploy == 'true' 
        run: | # autentikasi docker ke gcr
          gcloud auth configure-docker asia-southeast2-docker.pkg.dev --quiet

      - name: "push to gar" # push image ke google artifact registry (gar)
        if: steps.check.outputs.deploy == 'true' 
        run: | #tambah tag ke image dan push ke gar
          docker tag ghcr.io/${{github.actor}}/subply-api:latest asia-southeast2-docker.pkg.dev/modified-fabric-379312/subply/subply-api:latest
          docker push asia-southeast2-docker.pkg.dev/modified-fabric-379312/subply/subply-api:latest 

      - id: 'deploy' # deploy ke cloud run kalau ada perubahan di src
        if: steps.check.outputs.deploy == 'true' 
        uses: 'google-github-actions/deploy-cloudrun@v2' # tool untuk deploy ke cloud run
        with:
          service: 'subply-deploy' # nama service cloud run
          image: 'asia-southeast2-docker.pkg.dev/modified-fabric-379312/subply/subply-api:latest' # image yang mau di deploy
          region: 'asia-southeast2' # region cloud run
          project_id: 'modified-fabric-379312' # project id gcp
          env_vars: | # variabel lingkungan yang mau di set
            CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}
            CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}
            CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            MIDTRANS_SERVER_KEY=${{ secrets.MIDTRANS_SERVER_KEY }}
            PORT=8080

      - name: 'Check response code' # cek apakah deploy berhasil
        if: steps.check.outputs.deploy == 'true' 
        run: |
          curl -s -o /dev/null -w "%{http_code}" "${{ steps.deploy.outputs.url }}"
